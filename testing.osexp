---
API: 3
OpenSesame: 4.0.13
Platform: posix
---
set width 1024
set title "New experiment"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set round_decimals 2
set psychopy_screen 1
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path None
set disable_garbage_collection yes
set description "The main experiment item"
set canvas_backend psycho
set background "#3d3846"

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run getting_started True
	run new_inline_script True
	run new_1_inline_script True disabled
	run new_keyboard_response True
	run welcome True disabled

define notepad getting_started
	__note__
	Welcome to OpenSesame 4.0 "Melodramatic Milgram"!
	If you are new to OpenSesame, it is a good idea to follow one of the tutorials,
	which can be found on the documentation site:
	- <http://osdoc.cogsci.nl/>
	You can also check out the examples. These can be opened via:
	- Menu -> Tools -> Example experiments.
	And feel free to ask for help on the forum:
	- <http://forum.cogsci.nl/>
	Have fun with OpenSesame!
	__end__
	set description "A simple notepad to document your experiment. This plug-in does nothing."

define inline_script new_1_inline_script
	set description "Executes Python code"
	___run__
	#canvas = Canvas(color="gray")
	
	timestamps = []
	for c in c_list:
	    t = c.show()
	    timestamps.append(t)
	    #clock.sleep(1)
	import numpy as np
	print(np.diff(np.array(timestamps)))
	__end__
	___prepare__
	canvas = Canvas(color="gray")
	
	canvas["circle"] = Circle(0, 0, 100)
	
	c_list =  []
	for k in range(3000):
	    canvas["circle"].x = k
	    c_list.append(canvas)
	    
	__end__

define inline_script new_inline_script
	set description "Executes Python code"
	___run__
	canvas = Canvas(color="gray")
	
	canvas["circle"] = Circle(0, 0, 100)
	timestamps = []
	for k in range(100):
	    canvas.clear()
	    canvas["circle"] = Circle(k, 0, 100)
	    t = canvas.show()
	    timestamps.append(t)
	    clock.sleep(1)
	import numpy as np
	print(np.diff(np.array(timestamps)))
	__end__
	___prepare__
	canvas = Canvas(color="gray")
	
	canvas["circle"] = Circle(0, 0, 100)
	
	c_list =  []
	for k in range(100):
	    canvas["circle"].x = k
	    c_list.append(canvas)
	    
	__end__

define keyboard_response new_keyboard_response
	set timeout infinite
	set flush yes
	set event_type keypress
	set duration keypress
	set description "Collects keyboard responses"

define sketchpad welcome
	set start_response_interval no
	set reset_variables no
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=serif font_italic=no font_size=32 html=yes show_if=True text="OpenSesame 4.0 <i>Melodramatic Milgram</i>" x=0 y=0 z_index=0

